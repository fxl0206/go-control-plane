// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/api/v2/fds.proto

package envoy_api_v2

import (
	context "context"
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/go-control-plane/envoy/annotations"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FdsDummy struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FdsDummy) Reset()         { *m = FdsDummy{} }
func (m *FdsDummy) String() string { return proto.CompactTextString(m) }
func (*FdsDummy) ProtoMessage()    {}
func (*FdsDummy) Descriptor() ([]byte, []int) {
	return fileDescriptor_647132dd28d92f13, []int{0}
}

func (m *FdsDummy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FdsDummy.Unmarshal(m, b)
}
func (m *FdsDummy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FdsDummy.Marshal(b, m, deterministic)
}
func (m *FdsDummy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FdsDummy.Merge(m, src)
}
func (m *FdsDummy) XXX_Size() int {
	return xxx_messageInfo_FdsDummy.Size(m)
}
func (m *FdsDummy) XXX_DiscardUnknown() {
	xxx_messageInfo_FdsDummy.DiscardUnknown(m)
}

var xxx_messageInfo_FdsDummy proto.InternalMessageInfo

func init() {
	proto.RegisterType((*FdsDummy)(nil), "envoy.api.v2.FdsDummy")
}

func init() { proto.RegisterFile("envoy/api/v2/fds.proto", fileDescriptor_647132dd28d92f13) }

var fileDescriptor_647132dd28d92f13 = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0xcd, 0x2b, 0xcb,
	0xaf, 0xd4, 0x4f, 0x2c, 0xc8, 0xd4, 0x2f, 0x33, 0xd2, 0x4f, 0x4b, 0x29, 0xd6, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0xe2, 0x01, 0x8b, 0xeb, 0x25, 0x16, 0x64, 0xea, 0x95, 0x19, 0x49, 0xc9, 0xa0,
	0xa8, 0x4a, 0xc9, 0x2c, 0x4e, 0xce, 0x2f, 0x4b, 0x2d, 0xaa, 0x84, 0xa8, 0x95, 0x92, 0x49, 0xcf,
	0xcf, 0x4f, 0xcf, 0x49, 0x05, 0x4b, 0x27, 0xe6, 0xe5, 0xe5, 0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7,
	0x41, 0x4d, 0x92, 0x52, 0x80, 0xea, 0x45, 0x48, 0xe8, 0x17, 0xa5, 0x16, 0xe7, 0x97, 0x16, 0x25,
	0xa7, 0x42, 0x55, 0xc8, 0x95, 0xa6, 0x14, 0x24, 0xa2, 0x28, 0xc8, 0xcd, 0x4c, 0x2f, 0x4a, 0x2c,
	0x81, 0xc9, 0xcb, 0x62, 0xc8, 0x17, 0x97, 0x24, 0x96, 0x94, 0xc2, 0x2c, 0x90, 0x46, 0xf5, 0x42,
	0x69, 0x5e, 0x32, 0x48, 0x11, 0x44, 0x52, 0x89, 0x8b, 0x8b, 0xc3, 0x2d, 0xa5, 0xd8, 0xa5, 0x34,
	0x37, 0xb7, 0xd2, 0xe8, 0x33, 0x13, 0x97, 0x84, 0x1b, 0x54, 0xda, 0x05, 0xe6, 0x87, 0xe0, 0xd4,
	0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0xa1, 0x08, 0x2e, 0xfe, 0xe0, 0x92, 0xa2, 0xd4, 0xc4, 0x5c, 0x98,
	0x8a, 0x62, 0x21, 0x39, 0x3d, 0xe4, 0x40, 0xd0, 0x83, 0x6b, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x91, 0x92, 0xc7, 0x29, 0x5f, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0xaa, 0xc4, 0xa0, 0xc1, 0x68,
	0xc0, 0x28, 0x94, 0xc8, 0xc5, 0xe7, 0x92, 0x9a, 0x53, 0x92, 0x88, 0x30, 0x58, 0x19, 0x4d, 0x23,
	0x48, 0x16, 0xc3, 0x74, 0x15, 0xfc, 0x8a, 0x50, 0xac, 0xa8, 0xe6, 0xe2, 0x73, 0x4b, 0x2d, 0x49,
	0xce, 0xa0, 0xa2, 0xdb, 0x35, 0x9a, 0x2e, 0x3f, 0x99, 0xcc, 0x24, 0xa9, 0x24, 0x8e, 0x12, 0xe3,
	0x56, 0xb0, 0xe0, 0x2d, 0x06, 0x4b, 0x33, 0x5b, 0x31, 0x6a, 0x49, 0xc9, 0x76, 0x2d, 0x99, 0xf6,
	0x99, 0x5d, 0x9c, 0x4b, 0x14, 0xc5, 0x44, 0x98, 0x53, 0x9c, 0x42, 0x3e, 0xcd, 0xf8, 0xd7, 0xcf,
	0x2a, 0x2d, 0x24, 0x09, 0x91, 0x2e, 0x86, 0x84, 0xb7, 0x1e, 0x3c, 0x9e, 0xca, 0x8c, 0x77, 0x35,
	0x9c, 0xb8, 0xc8, 0xc6, 0x24, 0xc0, 0xc8, 0x25, 0x95, 0x99, 0x0f, 0x71, 0x56, 0x41, 0x51, 0x7e,
	0x45, 0x25, 0x8a, 0x0b, 0x9d, 0x40, 0xd1, 0x18, 0x00, 0x8a, 0xd2, 0x00, 0xc6, 0x0e, 0x46, 0xc6,
	0x00, 0xd6, 0x24, 0x36, 0x70, 0x04, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x7c, 0xde, 0x29,
	0x59, 0xc2, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FunctionDiscoveryServiceClient is the client API for FunctionDiscoveryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FunctionDiscoveryServiceClient interface {
	StreamFunctions(ctx context.Context, opts ...grpc.CallOption) (FunctionDiscoveryService_StreamFunctionsClient, error)
	DeltaFunctions(ctx context.Context, opts ...grpc.CallOption) (FunctionDiscoveryService_DeltaFunctionsClient, error)
	FetchFunctions(ctx context.Context, in *DiscoveryRequest, opts ...grpc.CallOption) (*DiscoveryResponse, error)
}

type functionDiscoveryServiceClient struct {
	cc *grpc.ClientConn
}

func NewFunctionDiscoveryServiceClient(cc *grpc.ClientConn) FunctionDiscoveryServiceClient {
	return &functionDiscoveryServiceClient{cc}
}

func (c *functionDiscoveryServiceClient) StreamFunctions(ctx context.Context, opts ...grpc.CallOption) (FunctionDiscoveryService_StreamFunctionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FunctionDiscoveryService_serviceDesc.Streams[0], "/envoy.api.v2.FunctionDiscoveryService/StreamFunctions", opts...)
	if err != nil {
		return nil, err
	}
	x := &functionDiscoveryServiceStreamFunctionsClient{stream}
	return x, nil
}

type FunctionDiscoveryService_StreamFunctionsClient interface {
	Send(*DiscoveryRequest) error
	Recv() (*DiscoveryResponse, error)
	grpc.ClientStream
}

type functionDiscoveryServiceStreamFunctionsClient struct {
	grpc.ClientStream
}

func (x *functionDiscoveryServiceStreamFunctionsClient) Send(m *DiscoveryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *functionDiscoveryServiceStreamFunctionsClient) Recv() (*DiscoveryResponse, error) {
	m := new(DiscoveryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *functionDiscoveryServiceClient) DeltaFunctions(ctx context.Context, opts ...grpc.CallOption) (FunctionDiscoveryService_DeltaFunctionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FunctionDiscoveryService_serviceDesc.Streams[1], "/envoy.api.v2.FunctionDiscoveryService/DeltaFunctions", opts...)
	if err != nil {
		return nil, err
	}
	x := &functionDiscoveryServiceDeltaFunctionsClient{stream}
	return x, nil
}

type FunctionDiscoveryService_DeltaFunctionsClient interface {
	Send(*DeltaDiscoveryRequest) error
	Recv() (*DeltaDiscoveryResponse, error)
	grpc.ClientStream
}

type functionDiscoveryServiceDeltaFunctionsClient struct {
	grpc.ClientStream
}

func (x *functionDiscoveryServiceDeltaFunctionsClient) Send(m *DeltaDiscoveryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *functionDiscoveryServiceDeltaFunctionsClient) Recv() (*DeltaDiscoveryResponse, error) {
	m := new(DeltaDiscoveryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *functionDiscoveryServiceClient) FetchFunctions(ctx context.Context, in *DiscoveryRequest, opts ...grpc.CallOption) (*DiscoveryResponse, error) {
	out := new(DiscoveryResponse)
	err := c.cc.Invoke(ctx, "/envoy.api.v2.FunctionDiscoveryService/FetchFunctions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FunctionDiscoveryServiceServer is the server API for FunctionDiscoveryService service.
type FunctionDiscoveryServiceServer interface {
	StreamFunctions(FunctionDiscoveryService_StreamFunctionsServer) error
	DeltaFunctions(FunctionDiscoveryService_DeltaFunctionsServer) error
	FetchFunctions(context.Context, *DiscoveryRequest) (*DiscoveryResponse, error)
}

// UnimplementedFunctionDiscoveryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFunctionDiscoveryServiceServer struct {
}

func (*UnimplementedFunctionDiscoveryServiceServer) StreamFunctions(srv FunctionDiscoveryService_StreamFunctionsServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamFunctions not implemented")
}
func (*UnimplementedFunctionDiscoveryServiceServer) DeltaFunctions(srv FunctionDiscoveryService_DeltaFunctionsServer) error {
	return status.Errorf(codes.Unimplemented, "method DeltaFunctions not implemented")
}
func (*UnimplementedFunctionDiscoveryServiceServer) FetchFunctions(ctx context.Context, req *DiscoveryRequest) (*DiscoveryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchFunctions not implemented")
}

func RegisterFunctionDiscoveryServiceServer(s *grpc.Server, srv FunctionDiscoveryServiceServer) {
	s.RegisterService(&_FunctionDiscoveryService_serviceDesc, srv)
}

func _FunctionDiscoveryService_StreamFunctions_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FunctionDiscoveryServiceServer).StreamFunctions(&functionDiscoveryServiceStreamFunctionsServer{stream})
}

type FunctionDiscoveryService_StreamFunctionsServer interface {
	Send(*DiscoveryResponse) error
	Recv() (*DiscoveryRequest, error)
	grpc.ServerStream
}

type functionDiscoveryServiceStreamFunctionsServer struct {
	grpc.ServerStream
}

func (x *functionDiscoveryServiceStreamFunctionsServer) Send(m *DiscoveryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *functionDiscoveryServiceStreamFunctionsServer) Recv() (*DiscoveryRequest, error) {
	m := new(DiscoveryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _FunctionDiscoveryService_DeltaFunctions_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FunctionDiscoveryServiceServer).DeltaFunctions(&functionDiscoveryServiceDeltaFunctionsServer{stream})
}

type FunctionDiscoveryService_DeltaFunctionsServer interface {
	Send(*DeltaDiscoveryResponse) error
	Recv() (*DeltaDiscoveryRequest, error)
	grpc.ServerStream
}

type functionDiscoveryServiceDeltaFunctionsServer struct {
	grpc.ServerStream
}

func (x *functionDiscoveryServiceDeltaFunctionsServer) Send(m *DeltaDiscoveryResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *functionDiscoveryServiceDeltaFunctionsServer) Recv() (*DeltaDiscoveryRequest, error) {
	m := new(DeltaDiscoveryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _FunctionDiscoveryService_FetchFunctions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscoveryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FunctionDiscoveryServiceServer).FetchFunctions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envoy.api.v2.FunctionDiscoveryService/FetchFunctions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FunctionDiscoveryServiceServer).FetchFunctions(ctx, req.(*DiscoveryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FunctionDiscoveryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "envoy.api.v2.FunctionDiscoveryService",
	HandlerType: (*FunctionDiscoveryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchFunctions",
			Handler:    _FunctionDiscoveryService_FetchFunctions_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamFunctions",
			Handler:       _FunctionDiscoveryService_StreamFunctions_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "DeltaFunctions",
			Handler:       _FunctionDiscoveryService_DeltaFunctions_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "envoy/api/v2/fds.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/api/v2/core/roll_breaker.proto

package envoy_api_v2_core

import (
	fmt "fmt"
	_ "github.com/cncf/udpa/go/udpa/annotations"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RollBreakers_ActionType int32

const (
	RollBreakers_ERROR    RollBreakers_ActionType = 0
	RollBreakers_EJECTION RollBreakers_ActionType = 1
	RollBreakers_DEGRADE  RollBreakers_ActionType = 2
)

var RollBreakers_ActionType_name = map[int32]string{
	0: "ERROR",
	1: "EJECTION",
	2: "DEGRADE",
}

var RollBreakers_ActionType_value = map[string]int32{
	"ERROR":    0,
	"EJECTION": 1,
	"DEGRADE":  2,
}

func (x RollBreakers_ActionType) String() string {
	return proto.EnumName(RollBreakers_ActionType_name, int32(x))
}

func (RollBreakers_ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d2e35ef4a88f660b, []int{0, 0}
}

type RollBreakers struct {
	WindowInterval       *duration.Duration        `protobuf:"bytes,1,opt,name=window_interval,json=windowInterval,proto3" json:"window_interval,omitempty"`
	RollInterval         *duration.Duration        `protobuf:"bytes,2,opt,name=roll_interval,json=rollInterval,proto3" json:"roll_interval,omitempty"`
	CheckInterval        *duration.Duration        `protobuf:"bytes,3,opt,name=check_interval,json=checkInterval,proto3" json:"check_interval,omitempty"`
	BreakPolicy          *RollBreakers_BreakPolicy `protobuf:"bytes,4,opt,name=break_policy,json=breakPolicy,proto3" json:"break_policy,omitempty"`
	Threshold            *RollBreakers_Threshold   `protobuf:"bytes,5,opt,name=threshold,proto3" json:"threshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RollBreakers) Reset()         { *m = RollBreakers{} }
func (m *RollBreakers) String() string { return proto.CompactTextString(m) }
func (*RollBreakers) ProtoMessage()    {}
func (*RollBreakers) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2e35ef4a88f660b, []int{0}
}

func (m *RollBreakers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollBreakers.Unmarshal(m, b)
}
func (m *RollBreakers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollBreakers.Marshal(b, m, deterministic)
}
func (m *RollBreakers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollBreakers.Merge(m, src)
}
func (m *RollBreakers) XXX_Size() int {
	return xxx_messageInfo_RollBreakers.Size(m)
}
func (m *RollBreakers) XXX_DiscardUnknown() {
	xxx_messageInfo_RollBreakers.DiscardUnknown(m)
}

var xxx_messageInfo_RollBreakers proto.InternalMessageInfo

func (m *RollBreakers) GetWindowInterval() *duration.Duration {
	if m != nil {
		return m.WindowInterval
	}
	return nil
}

func (m *RollBreakers) GetRollInterval() *duration.Duration {
	if m != nil {
		return m.RollInterval
	}
	return nil
}

func (m *RollBreakers) GetCheckInterval() *duration.Duration {
	if m != nil {
		return m.CheckInterval
	}
	return nil
}

func (m *RollBreakers) GetBreakPolicy() *RollBreakers_BreakPolicy {
	if m != nil {
		return m.BreakPolicy
	}
	return nil
}

func (m *RollBreakers) GetThreshold() *RollBreakers_Threshold {
	if m != nil {
		return m.Threshold
	}
	return nil
}

type RollBreakers_BreakPolicy struct {
	EffectRequests       *wrappers.UInt32Value   `protobuf:"bytes,1,opt,name=effect_requests,json=effectRequests,proto3" json:"effect_requests,omitempty"`
	AllowRetrySelect     *wrappers.BoolValue     `protobuf:"bytes,2,opt,name=allow_retry_select,json=allowRetrySelect,proto3" json:"allow_retry_select,omitempty"`
	ActionType           RollBreakers_ActionType `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3,enum=envoy.api.v2.core.RollBreakers_ActionType" json:"action_type,omitempty"`
	ActionCode           *wrappers.UInt32Value   `protobuf:"bytes,4,opt,name=action_code,json=actionCode,proto3" json:"action_code,omitempty"`
	ActionHeaders        map[string]string       `protobuf:"bytes,5,rep,name=action_headers,json=actionHeaders,proto3" json:"action_headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ActionBody           *wrappers.StringValue   `protobuf:"bytes,6,opt,name=action_body,json=actionBody,proto3" json:"action_body,omitempty"`
	BreakInterval        *duration.Duration      `protobuf:"bytes,7,opt,name=break_interval,json=breakInterval,proto3" json:"break_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RollBreakers_BreakPolicy) Reset()         { *m = RollBreakers_BreakPolicy{} }
func (m *RollBreakers_BreakPolicy) String() string { return proto.CompactTextString(m) }
func (*RollBreakers_BreakPolicy) ProtoMessage()    {}
func (*RollBreakers_BreakPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2e35ef4a88f660b, []int{0, 0}
}

func (m *RollBreakers_BreakPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollBreakers_BreakPolicy.Unmarshal(m, b)
}
func (m *RollBreakers_BreakPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollBreakers_BreakPolicy.Marshal(b, m, deterministic)
}
func (m *RollBreakers_BreakPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollBreakers_BreakPolicy.Merge(m, src)
}
func (m *RollBreakers_BreakPolicy) XXX_Size() int {
	return xxx_messageInfo_RollBreakers_BreakPolicy.Size(m)
}
func (m *RollBreakers_BreakPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_RollBreakers_BreakPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_RollBreakers_BreakPolicy proto.InternalMessageInfo

func (m *RollBreakers_BreakPolicy) GetEffectRequests() *wrappers.UInt32Value {
	if m != nil {
		return m.EffectRequests
	}
	return nil
}

func (m *RollBreakers_BreakPolicy) GetAllowRetrySelect() *wrappers.BoolValue {
	if m != nil {
		return m.AllowRetrySelect
	}
	return nil
}

func (m *RollBreakers_BreakPolicy) GetActionType() RollBreakers_ActionType {
	if m != nil {
		return m.ActionType
	}
	return RollBreakers_ERROR
}

func (m *RollBreakers_BreakPolicy) GetActionCode() *wrappers.UInt32Value {
	if m != nil {
		return m.ActionCode
	}
	return nil
}

func (m *RollBreakers_BreakPolicy) GetActionHeaders() map[string]string {
	if m != nil {
		return m.ActionHeaders
	}
	return nil
}

func (m *RollBreakers_BreakPolicy) GetActionBody() *wrappers.StringValue {
	if m != nil {
		return m.ActionBody
	}
	return nil
}

func (m *RollBreakers_BreakPolicy) GetBreakInterval() *duration.Duration {
	if m != nil {
		return m.BreakInterval
	}
	return nil
}

type RollBreakers_IntThreshold struct {
	LimitValue           *wrappers.UInt32Value     `protobuf:"bytes,1,opt,name=limit_value,json=limitValue,proto3" json:"limit_value,omitempty"`
	BreakPolicy          *RollBreakers_BreakPolicy `protobuf:"bytes,2,opt,name=break_policy,json=breakPolicy,proto3" json:"break_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RollBreakers_IntThreshold) Reset()         { *m = RollBreakers_IntThreshold{} }
func (m *RollBreakers_IntThreshold) String() string { return proto.CompactTextString(m) }
func (*RollBreakers_IntThreshold) ProtoMessage()    {}
func (*RollBreakers_IntThreshold) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2e35ef4a88f660b, []int{0, 1}
}

func (m *RollBreakers_IntThreshold) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollBreakers_IntThreshold.Unmarshal(m, b)
}
func (m *RollBreakers_IntThreshold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollBreakers_IntThreshold.Marshal(b, m, deterministic)
}
func (m *RollBreakers_IntThreshold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollBreakers_IntThreshold.Merge(m, src)
}
func (m *RollBreakers_IntThreshold) XXX_Size() int {
	return xxx_messageInfo_RollBreakers_IntThreshold.Size(m)
}
func (m *RollBreakers_IntThreshold) XXX_DiscardUnknown() {
	xxx_messageInfo_RollBreakers_IntThreshold.DiscardUnknown(m)
}

var xxx_messageInfo_RollBreakers_IntThreshold proto.InternalMessageInfo

func (m *RollBreakers_IntThreshold) GetLimitValue() *wrappers.UInt32Value {
	if m != nil {
		return m.LimitValue
	}
	return nil
}

func (m *RollBreakers_IntThreshold) GetBreakPolicy() *RollBreakers_BreakPolicy {
	if m != nil {
		return m.BreakPolicy
	}
	return nil
}

type RollBreakers_DurationThreshold struct {
	LimitValue           *duration.Duration        `protobuf:"bytes,1,opt,name=limit_value,json=limitValue,proto3" json:"limit_value,omitempty"`
	BreakPolicy          *RollBreakers_BreakPolicy `protobuf:"bytes,2,opt,name=break_policy,json=breakPolicy,proto3" json:"break_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RollBreakers_DurationThreshold) Reset()         { *m = RollBreakers_DurationThreshold{} }
func (m *RollBreakers_DurationThreshold) String() string { return proto.CompactTextString(m) }
func (*RollBreakers_DurationThreshold) ProtoMessage()    {}
func (*RollBreakers_DurationThreshold) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2e35ef4a88f660b, []int{0, 2}
}

func (m *RollBreakers_DurationThreshold) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollBreakers_DurationThreshold.Unmarshal(m, b)
}
func (m *RollBreakers_DurationThreshold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollBreakers_DurationThreshold.Marshal(b, m, deterministic)
}
func (m *RollBreakers_DurationThreshold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollBreakers_DurationThreshold.Merge(m, src)
}
func (m *RollBreakers_DurationThreshold) XXX_Size() int {
	return xxx_messageInfo_RollBreakers_DurationThreshold.Size(m)
}
func (m *RollBreakers_DurationThreshold) XXX_DiscardUnknown() {
	xxx_messageInfo_RollBreakers_DurationThreshold.DiscardUnknown(m)
}

var xxx_messageInfo_RollBreakers_DurationThreshold proto.InternalMessageInfo

func (m *RollBreakers_DurationThreshold) GetLimitValue() *duration.Duration {
	if m != nil {
		return m.LimitValue
	}
	return nil
}

func (m *RollBreakers_DurationThreshold) GetBreakPolicy() *RollBreakers_BreakPolicy {
	if m != nil {
		return m.BreakPolicy
	}
	return nil
}

type RollBreakers_Threshold struct {
	RequestNum           *RollBreakers_IntThreshold      `protobuf:"bytes,1,opt,name=request_num,json=requestNum,proto3" json:"request_num,omitempty"`
	AvgResponseTime      *RollBreakers_DurationThreshold `protobuf:"bytes,2,opt,name=avg_response_time,json=avgResponseTime,proto3" json:"avg_response_time,omitempty"`
	FailureRate          *RollBreakers_IntThreshold      `protobuf:"bytes,3,opt,name=failure_rate,json=failureRate,proto3" json:"failure_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RollBreakers_Threshold) Reset()         { *m = RollBreakers_Threshold{} }
func (m *RollBreakers_Threshold) String() string { return proto.CompactTextString(m) }
func (*RollBreakers_Threshold) ProtoMessage()    {}
func (*RollBreakers_Threshold) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2e35ef4a88f660b, []int{0, 3}
}

func (m *RollBreakers_Threshold) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollBreakers_Threshold.Unmarshal(m, b)
}
func (m *RollBreakers_Threshold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollBreakers_Threshold.Marshal(b, m, deterministic)
}
func (m *RollBreakers_Threshold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollBreakers_Threshold.Merge(m, src)
}
func (m *RollBreakers_Threshold) XXX_Size() int {
	return xxx_messageInfo_RollBreakers_Threshold.Size(m)
}
func (m *RollBreakers_Threshold) XXX_DiscardUnknown() {
	xxx_messageInfo_RollBreakers_Threshold.DiscardUnknown(m)
}

var xxx_messageInfo_RollBreakers_Threshold proto.InternalMessageInfo

func (m *RollBreakers_Threshold) GetRequestNum() *RollBreakers_IntThreshold {
	if m != nil {
		return m.RequestNum
	}
	return nil
}

func (m *RollBreakers_Threshold) GetAvgResponseTime() *RollBreakers_DurationThreshold {
	if m != nil {
		return m.AvgResponseTime
	}
	return nil
}

func (m *RollBreakers_Threshold) GetFailureRate() *RollBreakers_IntThreshold {
	if m != nil {
		return m.FailureRate
	}
	return nil
}

func init() {
	proto.RegisterEnum("envoy.api.v2.core.RollBreakers_ActionType", RollBreakers_ActionType_name, RollBreakers_ActionType_value)
	proto.RegisterType((*RollBreakers)(nil), "envoy.api.v2.core.RollBreakers")
	proto.RegisterType((*RollBreakers_BreakPolicy)(nil), "envoy.api.v2.core.RollBreakers.BreakPolicy")
	proto.RegisterMapType((map[string]string)(nil), "envoy.api.v2.core.RollBreakers.BreakPolicy.ActionHeadersEntry")
	proto.RegisterType((*RollBreakers_IntThreshold)(nil), "envoy.api.v2.core.RollBreakers.IntThreshold")
	proto.RegisterType((*RollBreakers_DurationThreshold)(nil), "envoy.api.v2.core.RollBreakers.DurationThreshold")
	proto.RegisterType((*RollBreakers_Threshold)(nil), "envoy.api.v2.core.RollBreakers.Threshold")
}

func init() {
	proto.RegisterFile("envoy/api/v2/core/roll_breaker.proto", fileDescriptor_d2e35ef4a88f660b)
}

var fileDescriptor_d2e35ef4a88f660b = []byte{
	// 763 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xcb, 0x6e, 0xeb, 0x44,
	0x18, 0xc7, 0x71, 0xda, 0xb4, 0x64, 0x9c, 0xa6, 0xe9, 0xa8, 0x82, 0x10, 0x71, 0xa9, 0x2a, 0x16,
	0xe5, 0x22, 0x5b, 0xa4, 0x1b, 0x54, 0x89, 0xaa, 0x4d, 0x1b, 0xb5, 0x01, 0xd1, 0x56, 0xd3, 0x80,
	0xc4, 0x02, 0x59, 0x13, 0xfb, 0x4b, 0x32, 0xea, 0xc4, 0x63, 0xc6, 0x63, 0x07, 0xef, 0x58, 0xb3,
	0x61, 0xcb, 0x06, 0xf1, 0x1e, 0xbc, 0x00, 0x6c, 0x91, 0x78, 0x12, 0x1e, 0x00, 0x21, 0x8f, 0x27,
	0x97, 0x23, 0x9f, 0xd3, 0x9c, 0xea, 0xe8, 0xec, 0xc6, 0xf3, 0xcd, 0xef, 0x3f, 0xff, 0xef, 0x32,
	0x09, 0xfa, 0x10, 0xc2, 0x54, 0x64, 0x2e, 0x8d, 0x98, 0x9b, 0x76, 0x5c, 0x5f, 0x48, 0x70, 0xa5,
	0xe0, 0xdc, 0x1b, 0x4a, 0xa0, 0x0f, 0x20, 0x9d, 0x48, 0x0a, 0x25, 0xf0, 0x9e, 0x3e, 0xe5, 0xd0,
	0x88, 0x39, 0x69, 0xc7, 0xc9, 0x4f, 0xb5, 0xdf, 0x1f, 0x0b, 0x31, 0xe6, 0xe0, 0xea, 0x03, 0xc3,
	0x64, 0xe4, 0xce, 0x24, 0x8d, 0x22, 0x90, 0x71, 0x81, 0x94, 0xe3, 0x41, 0x22, 0xa9, 0x62, 0x22,
	0x9c, 0xc7, 0x93, 0x20, 0xa2, 0x2e, 0x0d, 0x43, 0xa1, 0xf4, 0x76, 0xec, 0x4e, 0xd9, 0x58, 0x52,
	0x05, 0x26, 0xfe, 0x5e, 0x29, 0x1e, 0x2b, 0xaa, 0x92, 0xb9, 0xfc, 0xdb, 0x29, 0xe5, 0x2c, 0xa0,
	0x0a, 0xdc, 0xf9, 0xa2, 0x08, 0x1c, 0xfe, 0x59, 0x47, 0x75, 0x22, 0x38, 0xef, 0x16, 0x09, 0xc4,
	0xb8, 0x8b, 0x76, 0x67, 0x2c, 0x0c, 0xc4, 0xcc, 0x63, 0xa1, 0x02, 0x99, 0x52, 0xde, 0xb2, 0x0e,
	0xac, 0x23, 0xbb, 0xf3, 0x8e, 0x53, 0x58, 0x74, 0xe6, 0x16, 0x9d, 0x4b, 0x63, 0x91, 0x34, 0x0a,
	0xa2, 0x6f, 0x00, 0x7c, 0x8a, 0x76, 0x74, 0x55, 0x16, 0x0a, 0x95, 0x75, 0x0a, 0xf5, 0xfc, 0xfc,
	0x82, 0x3f, 0x43, 0x0d, 0x7f, 0x02, 0xfe, 0xc3, 0x52, 0x60, 0x63, 0x9d, 0xc0, 0x8e, 0x06, 0x16,
	0x0a, 0x37, 0xa8, 0xae, 0x5b, 0xe2, 0x45, 0x82, 0x33, 0x3f, 0x6b, 0x6d, 0x6a, 0xfe, 0x13, 0xa7,
	0xd4, 0x18, 0x67, 0x35, 0x79, 0x47, 0x2f, 0xee, 0x34, 0x42, 0xec, 0xe1, 0xf2, 0x03, 0x5f, 0xa1,
	0x9a, 0x9a, 0x48, 0x88, 0x27, 0x82, 0x07, 0xad, 0xaa, 0x16, 0xfb, 0x68, 0x9d, 0xd8, 0x60, 0x0e,
	0x90, 0x25, 0xdb, 0xfe, 0x67, 0x13, 0xd9, 0x2b, 0xb7, 0xe0, 0x1e, 0xda, 0x85, 0xd1, 0x08, 0x7c,
	0xe5, 0x49, 0xf8, 0x21, 0x81, 0x58, 0xc5, 0xa6, 0xdc, 0xef, 0x96, 0x72, 0xfd, 0xa6, 0x1f, 0xaa,
	0xe3, 0xce, 0xb7, 0x94, 0x27, 0x40, 0x1a, 0x05, 0x44, 0x0c, 0x83, 0xaf, 0x11, 0xa6, 0x9c, 0x8b,
	0x99, 0x27, 0x41, 0xc9, 0xcc, 0x8b, 0x81, 0x83, 0xaf, 0x4c, 0xd9, 0xdb, 0x25, 0xa5, 0xae, 0x10,
	0xbc, 0xd0, 0x69, 0x6a, 0x8a, 0xe4, 0xd0, 0xbd, 0x66, 0xf0, 0x57, 0xc8, 0xa6, 0x7e, 0x5e, 0x52,
	0x4f, 0x65, 0x11, 0xe8, 0xc2, 0x37, 0x3a, 0x1f, 0xaf, 0xcb, 0xf5, 0x5c, 0x23, 0x83, 0x2c, 0x02,
	0x82, 0xe8, 0x62, 0x8d, 0xbf, 0x58, 0x88, 0xf9, 0x22, 0x00, 0xd3, 0x85, 0xc7, 0x33, 0x33, 0xf8,
	0x85, 0x08, 0x00, 0x03, 0x6a, 0x18, 0x7c, 0x02, 0x34, 0x00, 0x19, 0xb7, 0xaa, 0x07, 0x1b, 0x47,
	0x76, 0xe7, 0xf4, 0x09, 0x7d, 0x34, 0xd6, 0xae, 0x0b, 0x81, 0x5e, 0xa8, 0x64, 0x46, 0x76, 0xe8,
	0xea, 0xde, 0x8a, 0xcb, 0xa1, 0x08, 0xb2, 0xd6, 0xd6, 0x0b, 0x5c, 0xde, 0x2b, 0xc9, 0xc2, 0xf1,
	0x33, 0x2e, 0xbb, 0x22, 0xc8, 0xf2, 0x69, 0x2d, 0x66, 0x6d, 0x31, 0xad, 0xdb, 0x6b, 0xa7, 0x55,
	0x03, 0xf3, 0x69, 0x6d, 0x9f, 0x21, 0x5c, 0x76, 0x89, 0x9b, 0x68, 0xe3, 0x01, 0x32, 0x3d, 0x0e,
	0x35, 0x92, 0x2f, 0xf1, 0x3e, 0xaa, 0xa6, 0xf9, 0xf5, 0xba, 0xb1, 0x35, 0x52, 0x7c, 0x9c, 0x54,
	0x3e, 0xb7, 0xda, 0xbf, 0x59, 0xa8, 0xde, 0x0f, 0xd5, 0x62, 0xe4, 0xf2, 0x9c, 0x38, 0x9b, 0x32,
	0xe5, 0x15, 0xc0, 0xcb, 0xcc, 0x14, 0xd2, 0x80, 0x5e, 0x97, 0xde, 0x4f, 0xe5, 0xd5, 0xde, 0x4f,
	0xfb, 0x77, 0x0b, 0xed, 0xcd, 0xb3, 0x5f, 0x9a, 0x3c, 0x79, 0x9e, 0xc9, 0x47, 0xca, 0xf6, 0x3a,
	0x1d, 0xfe, 0x5c, 0x41, 0xb5, 0xa5, 0xb3, 0xaf, 0x91, 0x6d, 0xde, 0xa3, 0x17, 0x26, 0x53, 0xe3,
	0xec, 0xd3, 0x75, 0xe2, 0xab, 0x1d, 0x20, 0xc8, 0x08, 0xdc, 0x24, 0x53, 0xfc, 0x3d, 0xda, 0xa3,
	0xe9, 0xd8, 0x93, 0x10, 0x47, 0x22, 0x8c, 0xc1, 0x53, 0x6c, 0x0a, 0xc6, 0xf1, 0x67, 0xeb, 0x44,
	0x4b, 0x65, 0x23, 0xbb, 0x34, 0x1d, 0x13, 0x23, 0x35, 0x60, 0x53, 0xc0, 0xb7, 0xa8, 0x3e, 0xa2,
	0x8c, 0x27, 0x12, 0xbc, 0xfc, 0x2f, 0xc1, 0xfc, 0x5a, 0x3e, 0xcd, 0xae, 0x6d, 0x14, 0x08, 0x55,
	0x70, 0xd8, 0x41, 0x68, 0xf9, 0xa2, 0x71, 0x0d, 0x55, 0x7b, 0x84, 0xdc, 0x92, 0xe6, 0x1b, 0xb8,
	0x8e, 0xde, 0xec, 0x7d, 0xd9, 0xbb, 0x18, 0xf4, 0x6f, 0x6f, 0x9a, 0x16, 0xb6, 0xd1, 0xf6, 0x65,
	0xef, 0x8a, 0x9c, 0x5f, 0xf6, 0x9a, 0x95, 0xee, 0x77, 0xff, 0xfe, 0xfa, 0xdf, 0x2f, 0xd5, 0xb7,
	0xf0, 0x7e, 0x71, 0xab, 0x2f, 0xc2, 0x11, 0x1b, 0x17, 0xb7, 0xa6, 0xc7, 0x7f, 0xfc, 0xf4, 0xd7,
	0xdf, 0x5b, 0x95, 0xa6, 0x85, 0x3e, 0x60, 0xa2, 0xb0, 0x15, 0x49, 0xf1, 0x63, 0x56, 0x76, 0xd8,
	0x6d, 0xae, 0x58, 0xbc, 0xcb, 0x27, 0xe0, 0xce, 0x1a, 0x6e, 0xe9, 0x51, 0x38, 0xfe, 0x3f, 0x00,
	0x00, 0xff, 0xff, 0x16, 0xc7, 0x12, 0x13, 0x7e, 0x07, 0x00, 0x00,
}
